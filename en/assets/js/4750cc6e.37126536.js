"use strict";(self.webpackChunkhivetrace_docs=self.webpackChunkhivetrace_docs||[]).push([[9374],{7330:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"getting_started/monitoring/index","title":"Monitoring and Control","description":"Tracking sessions","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/getting_started/monitoring/index.md","sourceDirName":"getting_started/monitoring","slug":"/getting_started/monitoring/","permalink":"/hivetrace-docs/en/getting_started/monitoring/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting_started/monitoring/index.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Monitoring and Control"},"sidebar":"tutorialSidebar","previous":{"title":"Application Integration","permalink":"/hivetrace-docs/en/getting_started/integration/"},"next":{"title":"Alerts","permalink":"/hivetrace-docs/en/getting_started/alerts/"}}');var t=s(4848),r=s(8453);const o={sidebar_position:8,title:"Monitoring and Control"},l=void 0,c={},a=[{value:"Tracking sessions",id:"tracking-sessions",level:2},{value:"Monitoring table structure",id:"monitoring-table-structure",level:3},{value:"Basic information",id:"basic-information",level:4},{value:"Messages and agents",id:"messages-and-agents",level:4},{value:"Security policies",id:"security-policies",level:4},{value:"Additional functions",id:"additional-functions",level:4}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"tracking-sessions",children:"Tracking sessions"}),"\n",(0,t.jsxs)(n.p,{children:["Monitor messages in real time on the ",(0,t.jsx)(n.strong,{children:"User sessions"})," page."]}),"\n",(0,t.jsx)(n.p,{children:"This page displays charts and a summary table with monitoring results for all user messages and model responses."}),"\n",(0,t.jsx)(n.h3,{id:"monitoring-table-structure",children:"Monitoring table structure"}),"\n",(0,t.jsx)(n.p,{children:"The table contains the following columns:"}),"\n",(0,t.jsx)(n.h4,{id:"basic-information",children:"Basic information"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session ID"})," - unique identifier of the user's chat session in your application"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User"})," - the user to whom the entry relates (the sender of the message or the recipient of the model's response)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Application"}),' - the application you created on the "Applications" page']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Date"})," - record date"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Time"})," - record time"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"messages-and-agents",children:"Messages and agents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Msg"})," - text of the user's message or the model's response"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agents"})," - agents that processed the current message"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Direction"})," - message direction:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"In"})," - user message"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Out"})," - model response"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"security-policies",children:"Security policies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Default policy"})," - result of the built-in censor policy check"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom policy"})," - result of the custom censor policy check (only for incoming messages)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Refusal policy"})," - result of the refusal policy check"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," For all policies the result is recorded as:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Okay"})," - policy not violated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Bad"})," - policy violated"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"additional-functions",children:"Additional functions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Alerts"})," - button to view violations in the session that triggered an alert"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trace"})," - button to view the graph of agent interaction and tool calls (available only if agents were executed in the record)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Feedback"})," - ability to evaluate the correctness of the censor using reactions (thumbs up/down)"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);