"use strict";(self.webpackChunkhivetrace_docs=self.webpackChunkhivetrace_docs||[]).push([[4599],{1063:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"SDK/Agents/OpenAI Agents/index","title":"OpenAI Agents Integration","description":"Overview","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/SDK/Agents/OpenAI Agents/index.md","sourceDirName":"SDK/Agents/OpenAI Agents","slug":"/SDK/Agents/OpenAI Agents/","permalink":"/hivetrace-docs/en/SDK/Agents/OpenAI Agents/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SDK/Agents/OpenAI Agents/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Integration with LangChain","permalink":"/hivetrace-docs/en/SDK/Agents/Langchain/"}}');var r=t(4848),i=t(8453);const a={},o="OpenAI Agents Integration",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Basic Setup",id:"basic-setup",level:3}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"openai-agents-integration",children:"OpenAI Agents Integration"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["HiveTrace SDK provides seamless integration with the ",(0,r.jsx)(n.a,{href:"https://openai.github.io/openai-agents-python/",children:"OpenAI Agents SDK"})," for monitoring agent interactions, tool usage, handoffs, and task executions in your OpenAI Agents-based applications."]}),"\n",(0,r.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["HiveTrace SDK installed: ",(0,r.jsx)(n.code,{children:"pip install hivetrace[openai_agents]"})]}),"\n",(0,r.jsxs)(n.li,{children:["OpenAI Agents SDK installed: ",(0,r.jsx)(n.code,{children:"pip install openai-agents"})]}),"\n",(0,r.jsx)(n.li,{children:"Valid HiveTrace application ID and access token"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 1: Initialize the SDK (optional)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from hivetrace import HivetraceSDK\nfrom hivetrace.adapters.openai_agents import HivetraceOpenAIAgentProcessor\n\n# Initialize SDK\nhivetrace = HivetraceSDK(\n    config={\n        "HIVETRACE_URL": "https://your-hivetrace-instance.com",\n        "HIVETRACE_ACCESS_TOKEN": "your-access-token",\n    },\n    async_mode=False,\n)\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 2: Set Up the Tracing Processor"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"HivetraceOpenAIAgentProcessor"})," hooks into the OpenAI Agents SDK tracing system and automatically logs all agent and tool activity to HiveTrace."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from agents import Agent, Runner, function_tool, set_trace_processors\nfrom hivetrace.adapters.openai_agents import HivetraceOpenAIAgentProcessor\n\n\nset_trace_processors(\n    HivetraceOpenAIAgentProcessor(\n        hivetrace_instance=hivetrace,\n        application_id="your-hivetrace-app-id",\n    )\n)\n'})}),"\n",(0,r.jsx)(n.p,{children:"or setup environment variables HIVETRACE_URL, HIVETRACE_ACCESS_TOKEN, HIVETRACE_APPLICATION_ID for easier configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from agents import Agent, Runner, function_tool, set_trace_processors\nfrom hivetrace.adapters.openai_agents import HivetraceOpenAIAgentProcessor\n\n\nset_trace_processors([HivetraceOpenAIAgentProcessor()])\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 3: Call your agents"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from agents.tracing.create import trace\n\n# Define your agent and tools as usual\n@function_tool\ndef get_weather(city: str):\n    return f"The weather in {city} is sunny."\n\nagent = Agent(\n    name="WeatherAgent",\n    instructions="You provide weather updates.",\n    tools=[get_weather],\n)\n\n# Run the agent\nimport asyncio\nasync def main():\n    with trace(\n        workflow_name="Agent workflow",\n        metadata={\n            "session_id": "your-session-id",\n            "user_id": "your-user-id",\n        },\n    ):\n        result = await Runner.run(agent, "What\'s the weather in Paris?")\n        print(result.final_output)\n\nasyncio.run(main())\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);