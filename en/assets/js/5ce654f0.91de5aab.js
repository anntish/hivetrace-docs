"use strict";(self.webpackChunkhivetrace_docs=self.webpackChunkhivetrace_docs||[]).push([[6523],{3646:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"SDK/single_llm_applications/index","title":"Connecting Applications with a Single LLM (no agents)","description":"Overview","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/SDK/single_llm_applications/index.md","sourceDirName":"SDK/single_llm_applications","slug":"/SDK/single_llm_applications/","permalink":"/hivetrace-docs/en/SDK/single_llm_applications/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/SDK/single_llm_applications/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Connecting Applications with a Single LLM (no agents)"},"sidebar":"tutorialSidebar","previous":{"title":"SDK","permalink":"/hivetrace-docs/en/category/sdk"},"next":{"title":"CrewAI Integration","permalink":"/hivetrace-docs/en/SDK/Agents/CrewAI/"}}');var a=s(4848),o=s(8453);const r={sidebar_position:1,title:"Connecting Applications with a Single LLM (no agents)"},t="HiveTrace SDK",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Synchronous vs. Asynchronous modes",id:"synchronous-vs-asynchronous-modes",level:2},{value:"Synchronous mode",id:"synchronous-mode",level:3},{value:"Initialise in synchronous mode",id:"initialise-in-synchronous-mode",level:4},{value:"Send a user request",id:"send-a-user-request",level:4},{value:"Send an LLM response",id:"send-an-llm-response",level:4},{value:"Asynchronous mode (default)",id:"asynchronous-mode-default",level:3},{value:"Initialise in asynchronous mode",id:"initialise-in-asynchronous-mode",level:4},{value:"Send a user request asynchronously",id:"send-a-user-request-asynchronously",level:4},{value:"Send an LLM response asynchronously",id:"send-an-llm-response-asynchronously",level:4},{value:"Example with additional parameters",id:"example-with-additional-parameters",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"<code>input</code>",id:"input",level:3},{value:"<code>output</code>",id:"output",level:3},{value:"Sending requests in synchronous mode",id:"sending-requests-in-synchronous-mode",level:2},{value:"Sending requests in asynchronous mode",id:"sending-requests-in-asynchronous-mode",level:2},{value:"Closing the asynchronous client",id:"closing-the-asynchronous-client",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Configuration sources",id:"configuration-sources",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"hivetrace-sdk",children:"HiveTrace SDK"})}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"The HiveTrace SDK is designed to integrate your application with the HiveTrace service, providing monitoring of user requests and LLM responses."}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["Install the SDK via ",(0,a.jsx)(n.strong,{children:"pip"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install hivetrace[base]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from hivetrace import HivetraceSDK\n"})}),"\n",(0,a.jsx)(n.h2,{id:"synchronous-vs-asynchronous-modes",children:"Synchronous vs. Asynchronous modes"}),"\n",(0,a.jsxs)(n.p,{children:["The SDK supports both synchronous and asynchronous execution. By default, it works ",(0,a.jsx)(n.strong,{children:"asynchronously"}),". You can explicitly set the mode during initialisation."]}),"\n",(0,a.jsx)(n.h3,{id:"synchronous-mode",children:"Synchronous mode"}),"\n",(0,a.jsx)(n.h4,{id:"initialise-in-synchronous-mode",children:"Initialise in synchronous mode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Synchronous mode\nhivetrace = HivetraceSDK(async_mode=False)\n"})}),"\n",(0,a.jsx)(n.h4,{id:"send-a-user-request",children:"Send a user request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'response = hivetrace.input(\n    application_id="your-application-id",  # obtained after registering the application in the UI\n    message="User request here",\n)\n'})}),"\n",(0,a.jsx)(n.h4,{id:"send-an-llm-response",children:"Send an LLM response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'response = hivetrace.output(\n    application_id="your-application-id",  # obtained after registering the application in the UI\n    message="LLM response here",\n)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"asynchronous-mode-default",children:"Asynchronous mode (default)"}),"\n",(0,a.jsx)(n.h4,{id:"initialise-in-asynchronous-mode",children:"Initialise in asynchronous mode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"hivetrace = HivetraceSDK(async_mode=True)\n"})}),"\n",(0,a.jsx)(n.h4,{id:"send-a-user-request-asynchronously",children:"Send a user request asynchronously"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'response = await hivetrace.input_async(\n    application_id="your-application-id",\n    message="User request here",\n)\n'})}),"\n",(0,a.jsx)(n.h4,{id:"send-an-llm-response-asynchronously",children:"Send an LLM response asynchronously"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'response = await hivetrace.output_async(\n    application_id="your-application-id",\n    message="LLM response here",\n)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"example-with-additional-parameters",children:"Example with additional parameters"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'response = hivetrace.input(\n    application_id="your-application-id",\n    message="User request here",\n    additional_parameters={\n        "session_id": "your-session-id",\n        "user_id": "your-user-id",\n        "agents": {\n            "agent-1-id": {"name": "Agent 1", "description": "Agent description"},\n            "agent-2-id": {"name": "Agent 2"},\n            "agent-3-id": {},\n        },\n    },\n)\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," ",(0,a.jsx)(n.code,{children:"session_id"}),", ",(0,a.jsx)(n.code,{children:"user_id"}),", and every ",(0,a.jsx)(n.code,{children:"agent_id"})," must be valid UUIDs."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,a.jsx)(n.h3,{id:"input",children:(0,a.jsx)(n.code,{children:"input"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def input(application_id: str, message: str, additional_parameters: dict | None = None) -> dict:\n    ...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Sends a ",(0,a.jsx)(n.strong,{children:"user request"})," to HiveTrace."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"application_id"})," \u2014 Application identifier (must be a valid UUID created in the UI)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"message"})," \u2014 User message"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"additional_parameters"})," \u2014 Optional dictionary with extra data"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Sample response"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "status": "processed",\n  "monitoring_result": {\n    "is_toxic": false,\n    "type_of_violation": "benign",\n    "token_count": 9,\n    "token_usage_warning": false,\n    "token_usage_unbounded": false\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"output",children:(0,a.jsx)(n.code,{children:"output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def output(application_id: str, message: str, additional_parameters: dict | None = None) -> dict:\n    ...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Sends an ",(0,a.jsx)(n.strong,{children:"LLM response"})," to HiveTrace."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Sample response"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "status": "processed",\n  "monitoring_result": {\n    "is_toxic": false,\n    "type_of_violation": "safe",\n    "token_count": 21,\n    "token_usage_warning": false,\n    "token_usage_unbounded": false\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"sending-requests-in-synchronous-mode",children:"Sending requests in synchronous mode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def main():\n    hivetrace = HivetraceSDK(async_mode=False)\n    response = hivetrace.input(\n        application_id="your-application-id",\n        message="User request here",\n    )\n\nmain()\n'})}),"\n",(0,a.jsx)(n.h2,{id:"sending-requests-in-asynchronous-mode",children:"Sending requests in asynchronous mode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def main():\n    hivetrace = HivetraceSDK(async_mode=True)\n    response = await hivetrace.input_async(\n        application_id="your-application-id",\n        message="User request here",\n    )\n    await hivetrace.close()\n\nasyncio.run(main())\n'})}),"\n",(0,a.jsx)(n.h3,{id:"closing-the-asynchronous-client",children:"Closing the asynchronous client"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"await hivetrace.close()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["The SDK loads configuration from ",(0,a.jsx)(n.strong,{children:"environment variables"}),". The base URL (",(0,a.jsx)(n.code,{children:"HIVETRACE_URL"}),") and API token (",(0,a.jsx)(n.code,{children:"HIVETRACE_ACCESS_TOKEN"}),") are automatically pulled from the environment."]}),"\n",(0,a.jsx)(n.h3,{id:"configuration-sources",children:"Configuration sources"}),"\n",(0,a.jsx)(n.p,{children:"HiveTrace SDK can retrieve configuration from the following sources:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:".env file"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"HIVETRACE_URL=https://your-hivetrace-instance.com\nHIVETRACE_ACCESS_TOKEN=your-access-token  # generated on the UI (API Tokens page)\n"})}),"\n",(0,a.jsx)(n.p,{children:"The SDK will automatically load these settings."}),"\n",(0,a.jsx)(n.p,{children:"You can also pass the configuration explicitly during SDK initialisation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'trace = HivetraceSDK(\n    config={\n        "HIVETRACE_URL": HIVETRACE_URL,\n        "HIVETRACE_ACCESS_TOKEN": HIVETRACE_ACCESS_TOKEN,\n    },\n    async_mode=False,\n)\n'})}),"\n",(0,a.jsx)(n.h1,{id:"license",children:"License"}),"\n",(0,a.jsx)(n.p,{children:"This project is licensed under Apache License 2.0."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(6540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);